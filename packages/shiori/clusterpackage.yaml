apiVersion: packages.glasskube.dev/v1alpha1
kind: ClusterPackage
metadata:
  name: shiori
spec:
  packageInfo:
    name: shiori
    version: 0.1.0 # Custom package version from local manifests
  manifests:
    - |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: shiori
    - |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: shiori
        namespace: shiori
        labels:
          app: shiori
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: shiori
        template:
          metadata:
            labels:
              app: shiori
          spec:
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
            volumes:
              - name: app
                persistentVolumeClaim:
                  claimName: shiori-data
            containers:
              - name: shiori
                image: ghcr.io/go-shiori/shiori:latest
                command: ["/usr/bin/shiori", "server"]
                imagePullPolicy: IfNotPresent
                ports:
                  - containerPort: 8080
                    name: http
                volumeMounts:
                  - mountPath: /srv/shiori
                    name: app
                envFrom:
                  - secretRef:
                      name: postgres-app
                env:
                  - name: SHIORI_DIR
                    value: /srv/shiori
                  - name: DB_PASS
                    valueFrom:
                      secretKeyRef:
                        name: postgres-app
                        key: password
                  - name: SHIORI_DATABASE_URL
                    value: "postgres://shiori:$(DB_PASS)@postgres-rw/shiori"
    - |
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: shiori
        name: shiori
        namespace: shiori
      spec:
        ports:
          - name: http
            protocol: TCP
            port: 8080
            targetPort: http
        selector:
          app: shiori
        type: NodePort
    - |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: shiori
        namespace: shiori
        annotations:
          argocd.argoproj.io/health-check.lua: |
            hs = {}
            hs.status = "Healthy"
            hs.message = "Skip health check for Ingress"
            return hs
      spec:
        rules:
          - host: my-shiori.example # Note: This host might need configuration by the user
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: shiori
                      port:
                        name: http
    - |
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: shiori-data
        namespace: shiori
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - |
      kind: Cluster
      apiVersion: postgresql.cnpg.io/v1
      metadata:
        name: postgres
        namespace: shiori
      spec:
        enableSuperuserAccess: false
        instances: 1
        bootstrap:
          initdb:
            database: shiori
            owner: shiori
        storage:
          size: 2Gi
        monitoring:
          enablePodMonitor: true
