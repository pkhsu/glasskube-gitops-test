# yaml-language-server: $schema=https://glasskube.dev/schemas/v1/package-manifest.json
name: shiori
scope: Namespaced
defaultNamespace: shiori
shortDescription: A simple bookmark manager for self-hosted deployments
longDescription: |
  ## Shiori
  Shiori is a simple bookmarks manager written in Go. It is intended to be a simple, easy to use, and self-hosted alternative to services like Pocket, Instapaper, and Readability.
  
  ### Features
  - Simple and clean interface
  - Bookmark management with tags and categorization
  - Search capabilities
  - Responsive design
  - Self-hosted solution

iconUrl: https://raw.githubusercontent.com/go-shiori/shiori/master/static/favicon-32x32.png

# We're using manifests since Shiori is defined as K8s manifests
manifests:
  # Using direct paths to the original manifests in the apps directory
  - url: /apps/shiori/namespace.yaml
  - url: /apps/shiori/deployment.yaml
  - url: /apps/shiori/service.yaml
  - url: /apps/shiori/persistentvolumeclaim.yaml
  - url: /apps/shiori/ingress.yaml
  - url: /apps/shiori/cluster.yaml

valueDefinitions:
  hostname:
    metadata:
      description: "The hostname for accessing Shiori"
    type: text
    defaultValue: "my-shiori.example"
    targets:
      - manifests:
          - selector: "kind=Ingress,name=shiori"
            patch:
              op: replace
              path: /spec/rules/0/host
  replicas:
    metadata:
      description: "Number of Shiori instances to run"
    type: number
    defaultValue: "1"
    targets:
      - manifests:
          - selector: "kind=Deployment,name=shiori"
            patch:
              op: replace
              path: /spec/replicas
  storageSize:
    metadata:
      description: "Size of persistent storage for Shiori data"
    type: text
    defaultValue: "1Gi"
    targets:
      - manifests:
          - selector: "kind=PersistentVolumeClaim,name=shiori-data"
            patch:
              op: replace
              path: /spec/resources/requests/storage

entrypoints:
  - name: web-ui
    serviceName: shiori
    port: 8080
    localPort: 8080
    scheme: http

references:
  - label: "GitHub Repository"
    url: "https://github.com/go-shiori/shiori"
  - label: "Documentation"
    url: "https://github.com/go-shiori/shiori/blob/master/README.md" 