# yaml-language-server: $schema=https://glasskube.dev/schemas/v1/package-manifest.json
name: shiori
scope: Cluster
defaultNamespace: shiori
shortDescription: A simple bookmark manager for self-hosted deployments
longDescription: |
  ## Shiori
  Shiori is a simple bookmarks manager written in Go. It is intended to be a simple, easy to use, and self-hosted alternative to services like Pocket, Instapaper, and Readability.
  
  ### Features
  - Simple and clean interface
  - Bookmark management with tags and categorization
  - Search capabilities
  - Responsive design
  - Self-hosted solution
  
  ### Getting Started
  Once deployed, you can access Shiori via your browser at your configured hostname. 
  Default credentials are username: `shiori` and password: `shiori`.

iconUrl: https://avatars.githubusercontent.com/u/41993376?s=280&v=4

# We're using manifests since Shiori is defined as K8s manifests
manifests:
  # Using direct links to GitHub raw content
  - url: https://raw.githubusercontent.com/pkhsu/glasskube-gitops-test/main/apps/shiori/namespace.yaml
  - url: https://raw.githubusercontent.com/pkhsu/glasskube-gitops-test/main/apps/shiori/deployment.yaml
  - url: https://raw.githubusercontent.com/pkhsu/glasskube-gitops-test/main/apps/shiori/service.yaml
  - url: https://raw.githubusercontent.com/pkhsu/glasskube-gitops-test/main/apps/shiori/persistentvolumeclaim.yaml
  - url: https://raw.githubusercontent.com/pkhsu/glasskube-gitops-test/main/apps/shiori/ingress.yaml
  - url: https://raw.githubusercontent.com/pkhsu/glasskube-gitops-test/main/apps/shiori/cluster.yaml

entrypoints:
  - name: web-ui
    serviceName: shiori
    port: 8080
    localPort: 8080
    scheme: http

references:
  - label: "GitHub Repository"
    url: "https://github.com/go-shiori/shiori"
  - label: "Documentation"
    url: "https://github.com/go-shiori/shiori/blob/master/README.md"
  - label: "Docker Image"
    url: "https://hub.docker.com/r/ghcr.io/go-shiori/shiori" 